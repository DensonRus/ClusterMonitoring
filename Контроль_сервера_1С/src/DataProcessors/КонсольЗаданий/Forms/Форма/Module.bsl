
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбновитьСписокРегламентныхЗаданийНаСервере();
	
КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

#Область ОбработчикиЭлементовФормы

&НаКлиенте
Процедура ТЗРегламентныеЗаданияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Элементы.ТЗРегламентныеЗадания.ТекущиеДанные<>Неопределено Тогда
		
		ТекущаяСтрока = Элементы.ТЗРегламентныеЗадания.ТекущиеДанные;
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("УникальныйИдентификатор", ТекущаяСтрока.УникальныйИдентификатор);
		ОткрытьФорму(ЭтотОбъект.ИмяФормы + "РегламентногоЗадания", СтруктураПараметров, ЭтотОбъект, , , , Новый ОписаниеОповещения("ОбновитьФорму", ЭтаФорма)); 
				
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ КОМАНД ФОРМЫ

#Область ОбработчикиКомандФормы

//События команд ТЗ Регламентные задания

//Обновление ТЗРегламентные задания
&НаСервере
Процедура ОбновитьСписокРегламентныхЗаданийНаСервере()
	
	Объект.ТЗРегламентныеЗадания.Очистить();
	
	МассивЗаданий = РегламентныеЗадания.ПолучитьРегламентныеЗадания();
	
	Для Каждого Элемент Из МассивЗаданий Цикл
		НоваяСтрока = Объект.ТЗРегламентныеЗадания.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,Элемент);		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписокРегламентныхЗаданий(Команда)
	
	ОбновитьСписокРегламентныхЗаданийНаСервере();
	
КонецПроцедуры

//Выполнение регламентного задания
&НаСервере
Процедура ВыполнитьЗаданиеНаСервере(УникальныйИдентификатор)
	
	Идентификатор = Новый УникальныйИдентификатор(УникальныйИдентификатор);
	Задание = РегламентныеЗадания.НайтиПоУникальномуИдентификатору(Идентификатор);
	
	Если Задание.Использование Тогда
		
		//проверка на выполнение в текущий момент
		Отбор = Новый Структура;
		Отбор.Вставить("Ключ",			Строка(Задание.УникальныйИдентификатор));
		Отбор.Вставить("Состояние ",	СостояниеФоновогоЗадания.Активно);		
		МассивЗаданий = ФоновыеЗадания.ПолучитьФоновыеЗадания(Отбор);
		
		Если МассивЗаданий.Количество() = 0 Тогда 
			НаименованиеФоновогоЗадания = "Запуск вручную: " + Задание.Метаданные.Синоним;
			ФоновыеЗадания.Выполнить(Задание.Метаданные.ИмяМетода, Задание.Параметры, Строка(Задание.УникальныйИдентификатор), НаименованиеФоновогоЗадания);
		Иначе
			Сообщить("Задание уже запущено");
		КонецЕсли;
		
	КонецЕсли;
	
	ОбновитьСписокРегламентныхЗаданийНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьЗадание(Команда)
	
	Если Элементы.ТЗРегламентныеЗадания.ТекущиеДанные <> Неопределено Тогда		
		ТекущаяСтрока = Элементы.ТЗРегламентныеЗадания.ТекущиеДанные;	
		ВыполнитьЗаданиеНаСервере(ТекущаяСтрока.УникальныйИдентификатор);		
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбновитьФорму(РезультатЗакрытия = Неопределено, ДополнительныеПараметры = Неопределено) Экспорт 
	
	ОбновитьСписокРегламентныхЗаданийНаСервере();
	
КонецПроцедуры

#КонецОбласти
